912. Sort an Array - LEETCODE
Given an array of integers nums, sort the array in ascending order and return it.
You must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.

Solution:

class Solution {
    public int[] sortArray(int[] arr) {
        sortArray(arr, 0, arr.length - 1);
        return arr;
    }
    public static void sortArray(int[] arr, int si, int ei) {
        int mid  = si + (ei-si)/2;
        if(si>=ei){
            return;
        }
        sortArray(arr, si, mid);
        sortArray(arr, mid+1, ei);
        merge(arr, si, mid, ei);
    }public static void merge(int[] arr, int si,int mid, int ei){
        int temp[] = new int[ei-si+1];
        int i = si;
        int j = mid+1;
        int k = 0;

        while(i<=mid && j<=ei){
            if(arr[i]<arr[j]){
                temp[k]= arr[i];
                i++;
                k++;
            }else{
                temp[k]= arr[j];
                j++;
                k++;
            }
        }
        while(i<=mid){
            temp[k++] = arr[i++];
        }
        while(j<=ei){
            temp[k++] = arr[j++];
        }

        for(k = 0, i = si; k<temp.length; k++,i++){
            arr[i] = temp[k];
        }

    }
}
